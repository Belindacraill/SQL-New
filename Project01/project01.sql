-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public."Department"
(
    depart_id bigserial NOT NULL,
    depart_name character varying(50) NOT NULL,
    depart_city character varying(20) NOT NULL,
    PRIMARY KEY (depart_id)
);

CREATE TABLE IF NOT EXISTS public."Roles"
(
    role_id bigserial NOT NULL,
    role character varying(20) NOT NULL,
    PRIMARY KEY (role_id)
);

CREATE TABLE IF NOT EXISTS public."Salaries"
(
    salary_id bigserial NOT NULL,
    salary_pa numeric(15, 2) NOT NULL,
    PRIMARY KEY (salary_id)
);

CREATE TABLE IF NOT EXISTS public."Overtime_Hours"
(
    overtime_id bigserial NOT NULL,
    overtime_hours numeric(15, 2) NOT NULL,
    PRIMARY KEY (overtime_id)
);

CREATE TABLE IF NOT EXISTS public."Employees"
(
    emp_id bigserial NOT NULL,
    first_name character varying(50) NOT NULL,
    last_name character varying(50) NOT NULL,
    gender character(1) NOT NULL, CHECK (gender IN ('M','F')),
    address character varying(100),
    email character varying(20),
    depart_id bigint NOT NULL,
    role_id bigint NOT NULL,
    salary_id bigint NOT NULL,
    overtime_id bigint NOT NULL,
    PRIMARY KEY (emp_id)
);

ALTER TABLE IF EXISTS public."Employees"
    ADD FOREIGN KEY (depart_id)
    REFERENCES public."Department" (depart_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Employees"
    ADD FOREIGN KEY (role_id)
    REFERENCES public."Roles" (role_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Employees"
    ADD FOREIGN KEY (salary_id)
    REFERENCES public."Salaries" (salary_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Employees"
    ADD FOREIGN KEY (overtime_id)
    REFERENCES public."Overtime_Hours" (overtime_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

--Department insert
INSERT INTO "Department" (depart_name, depart_city)
VALUES ('Accounts','Cape Town'),
       ('Admin','Sasolburg'),
       ('Mangement','Vaalpark'),
       ('Sales','Vaalpark');
       

SELECT * FROM "Department";

--Employees insert
INSERT INTO "Employees" (first_name, last_name, gender, address, email, depart_id, role_id, salary_id, overtime_id)
VALUES ('Lucky','Luke','M','49 Hake st','lucky@gmail.com','1','1','1','1'),
       ('Bel', 'Bee','F','120 Bream st','bel@gmail.com','2','2','2','2'),
       ('Melissa','Buys','F','20 Adder st','melissa@gmail.com','3','3','3','3'),
       ('Star','Fish','M','7 Senekal st','star@mail.com','4','4','4','4');

SELECT * FROM  "Employees";

--Roles insert
INSERT INTO "Roles" (role)
VALUES ('accounting'),
       ('reception'),
       ('manage'),
       ('sales');
       
SELECT * FROM "Roles";       
       
--Salaries insert
INSERT INTO "Salaries" (salary_pa)
VALUES ('10000'),
       ('7000'),
       ('20000'),
       ('15000');
       
SELECT * FROM "Salaries";

--Overtime Hours insert
INSERT INTO "Overtime_Hours" (overtime_hours)
VALUES ('2'),
        ('2'),
        ('3'),
        ('2');
       
SELECT * FROM "Overtime_Hours";

--Left join

SELECT
e.first_name,
e.last_name,
e.gender,
e.address,
e.email,
d.depart_name,
r.role,
s.salary_pa,
o.overtime_hours

FROM "Employees" AS e
LEFT JOIN "Department" AS d
ON e.depart_id = d.depart_id

LEFT JOIN "Roles" AS r
ON e.role_id = r.role_id

Left JOIN "Salaries" AS s
ON e.salary_id = s.salary_id

LEFT JOIN "Overtime_Hours" AS o
ON e.overtime_id = o.overtime_id;

END;